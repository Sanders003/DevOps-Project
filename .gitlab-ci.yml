stages:
  - lint
  - test
  - build
  - deploy_staging
  - test_staging
  - cleanup_staging
  
variables:
  DOCKER_IMAGE: "sanders003/flask-auth-app:latest"
  TF_ROOT: ${CI_PROJECT_DIR}/terraform
  TF_STATE_NAME: default
  AWS_ACCESS_KEY_ID: ${AWS_ROOT_KEY_ID}
  AWS_SECRET_ACCESS_KEY: ${AWS_ROOT_ACCESS_KEY}
  AWS_DEFAULT_REGION: "ap-south-2"

default:
  image:
    name: hashicorp/terraform:latest
    entrypoint: [""] # entrypoint to allow shell scripts
  cache:
    key: "${TF_STATE_NAME}"
    paths:
      - ${TF_ROOT}/.terraform/
      - ${TF_ROOT}/terraform.tfstate
      - ${TF_ROOT}/terraform.tfstate.backup

before_script:
  - echo "Starting pipeline for $CI_PROJECT_NAME"
  - cd ${TF_ROOT}
  
lint:
  stage: lint
  image: python:3.10
  before_script: [] 
  script:
    - cd ${CI_PROJECT_DIR}
    - pip install flake8
    - flake8 . --exclude=venv

unit_tests:
  stage: test
  image: python:3.10
  before_script: [] 
  script:
    - cd ${CI_PROJECT_DIR}
    - pip install -r requirements.txt
    - pytest tests/

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script: []
  script:
    - cd ${CI_PROJECT_DIR}
    - echo $DOCKERHUB_KEY | docker login -u $DOCKERHUB_NAME --password-stdin
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE

deploy_staging:
  stage: deploy_staging
  script:
    - apk add --no-cache sudo
    - terraform init
    - terraform validate
    - terraform plan -out=plan.tfplan
    - terraform apply -auto-approve plan.tfplan
  artifacts:
    paths:
      - ${TF_ROOT}/terraform.tfstate

test_staging:
  stage: test_staging
  script:
    - apk add --no-cache curl
    - |
      URL=$(terraform output -raw website_url)
      if [ -z "$URL" ]; then
        echo "Failed to get website_url from terraform output"
        exit 1
      fi
      echo "Testing URL: $URL"
      curl -f $URL && echo "Success"
  dependencies:
    - deploy_staging

cleanup_staging:
  stage: cleanup_staging
  script:
    - terraform init
    - terraform destroy -auto-approve
  when: manual 
  allow_failure: true
